---
description: 
globs: 
alwaysApply: false
---
# Todo App Dev Guide

## Common Issues & Fixes

### Registration Error
If you encounter: "An error occurred during registration. Please try again."
- Check logs for: `Registration error: Method App\Livewire\Auth\Register::emit does not exist`
- Fix: Replace `$this->emit()` with `$this->dispatch()` in Register.php for Livewire 3 compatibility

### Login/Auth Issues
- Session errors: Run `php artisan session:table` and `php artisan migrate`
- Remember token not working: Check that the remember_token column exists in users table
- Authentication failing: Ensure the correct guard is configured in config/auth.php

### Database Seeding
For fresh installation:
1. Run migrations: `php artisan migrate:fresh`
2. Run seeders: `php artisan db:seed`
- Creates admin user (admin@example.com / password)
- Creates test user (test@example.com / password)
- Creates sample tasks and categories

### Running Tests
- Feature tests: `php artisan test --filter=Feature`
- Unit tests: `php artisan test --filter=Unit`
- Specific test: `php artisan test --filter=RegisterTest`

### Common Laravel Commands
- Clear cache: `php artisan cache:clear`
- Clear config: `php artisan config:clear`
- Clear views: `php artisan view:clear`
- Clear routes: `php artisan route:clear`
- Clear all: `php artisan optimize:clear`

### Testing Workflow
1. Run unit tests first: `php artisan test --filter=Unit`
2. Run feature tests: `php artisan test --filter=Feature`
3. Run specific component test: `php artisan test --filter=RegisterTest`
4. Check for failed tests and fix issues
5. Rerun tests until all pass

### Task Model Fields
- title: string, required
- description: string, nullable
- due_date: date, nullable
- category_id: foreign key, nullable
- priority: int (0=low, 1=medium, 2=high)
- completed: boolean
- completed_at: timestamp, nullable
- session_id: string, nullable
- reminder_at: date, nullable
- tags: array, nullable
- progress: int (0-100), nullable

### Category Model Fields
- name: string, required
- color: string, required (hex color code)
- icon: string, required (icon name)
- user_id: foreign key, required

### Livewire 3 Migration Notes
- Changed $emit() to $dispatch()
- Changed wire:model to wire:model.live for real-time updates
- Changed assertEmitted() to assertDispatched() in tests
- Component namespaces are now App\Livewire instead of App\Http\Livewire

# Todo to Task Migration Guide

## Overview

The application has been migrated from using a `Todo` model to using a `Task` model. This guide documents the changes and how to handle the transition.

## Migration Status (Completed March 30, 2025)

- [x] Created new Task model
- [x] Added all required fields to Task model
- [x] Created migration to move data from todos to tasks table
- [x] Created migration to drop todos table
- [x] Updated Calendar component to use Task model
- [x] Updated LivewireTestHelpers to use Task model
- [x] Added backward compatibility methods in LivewireTestHelpers
- [x] Created TaskMvc component from TodoMvc
- [x] Created TaskBulkProcessor component
- [x] Updated routes to use Task terminology with redirects for backwards compatibility
- [x] Created validation command to verify migration completion
- [x] Updated AppServiceProvider to register new Livewire components

## Renamed Components

The following components have been created to replace their Todo counterparts:
- TaskMvc (replacement for TodoMvc)
- TaskBulkProcessor (replacement for TodoBulkProcessor)

## Common Issues

### SQL Error "Table 'todos' doesn't exist"

This error occurs when code is still referencing the `todos` table that has been dropped. To fix:

1. Change `use App\Models\Todo` to `use App\Models\Task` in any files that import the Todo model
2. Replace any query to `Todo::where(...)` with `Task::where(...)`
3. Replace any factory usage `Todo::factory()->create(...)` with `Task::factory()->create(...)`

### Components Using Task Model

The following components have been updated to use Task model:
- Calendar component
- LivewireTestHelpers
- TaskMvc
- TaskBulkProcessor
- Dashboard

## Component Registration

All new Task components are registered in the AppServiceProvider:

```php
public function boot(): void
{
    // Register Livewire components
    Livewire::component('task-bulk-processor', TaskBulkProcessor::class);
    Livewire::component('task-mvc', TaskMvc::class);
}
```

## Backwards Compatibility

The following measures ensure backward compatibility:
1. Redirect routes from old paths to new ones (e.g., /todomvc redirects to /taskmvc)
2. Preserved the original Todo component for alternate interfaces
3. Validation command to help identify any remaining Todo references

## Validation

To validate that the migration is complete, run:
```
php artisan app:validate-todo-task-migration
```

This command will check for any remaining references to the Todo model or todos table and report issues.
